{"ast":null,"code":"import _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Tablets.js\";\nimport React, { useState } from 'react';\nimport * as Icon from 'react-feather';\nimport { Link } from '@reach/router';\nimport { ALERT_VARIANTS, BUTTON_SIZES, ICON_SIZE, BUTTON_VARIANTS } from '../config/constants';\nimport { useAlert } from '../contexts/Alert';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { Table, Button, Separator, Loading } from '../components';\nimport DeleteTabletModal from './partials/DeleteTabletModal';\n\nvar Tablets = function Tablets() {\n  useTitle('Tablety');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDeleteModal = _useState2[0],\n      setIsDeleteModal = _useState2[1];\n\n  var getData = useFetch({\n    url: '/api/devices/',\n    onMount: true,\n    onError: function onError() {\n      addAlert('Błąd pobierania danych z serwisu', ALERT_VARIANTS.danger);\n    }\n  });\n\n  var openDeleteModal = function openDeleteModal(id) {\n    return setIsDeleteModal(id);\n  };\n\n  var closeDeleteModal = function closeDeleteModal() {\n    return setIsDeleteModal(false);\n  };\n\n  return React.createElement(Loading, {\n    isActive: getData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: Link,\n    to: \"/tablety/dodaj\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Icon.PlusCircle, {\n    size: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" Dodaj tablet\"), React.createElement(Separator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(DeleteTabletModal, {\n    id: isDeleteModal,\n    isOpen: isDeleteModal,\n    onClose: closeDeleteModal,\n    onDone: function onDone() {\n      getData.fetch();\n      closeDeleteModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: [{\n      key: 'name',\n      label: 'Nazwa tabletu'\n    }, {\n      label: 'Akcje',\n      format: function format(item) {\n        return React.createElement(React.Fragment, null, React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return openDeleteModal(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Icon.Trash2, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })));\n      }\n    }],\n    data: getData.response,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nexport default Tablets;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Tablets.js"],"names":["React","useState","Icon","Link","ALERT_VARIANTS","BUTTON_SIZES","ICON_SIZE","BUTTON_VARIANTS","useAlert","useTitle","useFetch","Table","Button","Separator","Loading","DeleteTabletModal","Tablets","addAlert","isDeleteModal","setIsDeleteModal","getData","url","onMount","onError","danger","openDeleteModal","id","closeDeleteModal","loading","fetch","key","label","format","item","small","gray","response"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as Icon from 'react-feather';\nimport { Link } from '@reach/router';\nimport {\n  ALERT_VARIANTS, BUTTON_SIZES, ICON_SIZE, BUTTON_VARIANTS\n} from '../config/constants';\nimport { useAlert } from '../contexts/Alert';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport {\n  Table, Button, Separator, Loading\n} from '../components';\nimport DeleteTabletModal from './partials/DeleteTabletModal';\n\nconst Tablets = () => {\n  useTitle('Tablety');\n\n  const { addAlert } = useAlert();\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const getData = useFetch({\n    url: '/api/devices/',\n    onMount: true,\n    onError: () => {\n      addAlert('Błąd pobierania danych z serwisu', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const openDeleteModal = id => setIsDeleteModal(id);\n  const closeDeleteModal = () => setIsDeleteModal(false);\n\n  return (\n    <Loading isActive={getData.loading}>\n      <Button as={Link} to=\"/tablety/dodaj\">\n        <Icon.PlusCircle size={15} /> Dodaj tablet\n      </Button>\n\n      <Separator />\n\n      <DeleteTabletModal\n        id={isDeleteModal}\n        isOpen={isDeleteModal}\n        onClose={closeDeleteModal}\n        onDone={() => {\n          getData.fetch();\n          closeDeleteModal();\n        }}\n      />\n\n      <Table\n        columns={[\n          {\n            key: 'name',\n            label: 'Nazwa tabletu'\n          },\n          {\n            label: 'Akcje',\n            format: item => (\n              <>\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => openDeleteModal(item.id)}\n                >\n                  <Icon.Trash2 size={ICON_SIZE.small} />\n                </Button>\n\n                {/* <Button\n                  as={Link}\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  to={`/tablety/${item.id}`}\n                >\n                  <Icon.Edit size={ICON_SIZE.small} />\n                </Button> */}\n              </>\n            )\n          }\n        ]}\n        data={getData.response}\n      />\n    </Loading>\n  );\n};\n\nexport default Tablets;\n"]},"metadata":{},"sourceType":"module"}