{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/views/SignIn.js\";\nimport React from 'react';\nimport AlertContext from '../contexts/Alert';\nimport UserContext from '../contexts/User';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport Field from '../components/Field';\nimport Button from '../components/Button';\nimport { ALERT_VARIANTS } from '../config/constants';\nimport useApi from '../hooks/useApi';\nexport default (function (_ref) {\n  var history = _ref.history;\n  useTitle('Logowanie');\n\n  var _AlertContext = AlertContext(),\n      createAlert = _AlertContext.createAlert;\n\n  var _UserContext = UserContext(),\n      startSession = _UserContext.startSession;\n\n  var api = useApi();\n\n  var _useForm = useForm(),\n      field = _useForm.field,\n      fields = _useForm.fields;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var response, _response, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return api.post('/api/login/', fields);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              createAlert(\"\".concat(_context.t0.response.data.message, \" \").concat(String.fromCodePoint(0x26a0)), ALERT_VARIANTS.danger);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (response.status === 200) {\n                _response = response, data = _response.data;\n                startSession(_objectSpread({\n                  username: fields.username,\n                  email: fields.email\n                }, data));\n                createAlert(\"Cze\\u015B\\u0107 \".concat(fields.username, \"! Jak si\\u0119 masz? \").concat(String.fromCodePoint(0x1f44b)), ALERT_VARIANTS.success);\n                history.push('/');\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    label: \"Nazwa u\\u017Cytkownika\"\n  }, field('username'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Has\\u0142o\",\n    type: \"password\"\n  }, field('password'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Zaloguj si\\u0119\"));\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/views/SignIn.js"],"names":["React","AlertContext","UserContext","useTitle","useForm","Field","Button","ALERT_VARIANTS","useApi","history","createAlert","startSession","api","field","fields","handleSubmit","e","preventDefault","post","response","data","message","String","fromCodePoint","danger","status","username","email","success","push"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,gBAAe,gBAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9BN,EAAAA,QAAQ,CAAC,WAAD,CAAR;;AAD8B,sBAGNF,YAAY,EAHN;AAAA,MAGtBS,WAHsB,iBAGtBA,WAHsB;;AAAA,qBAILR,WAAW,EAJN;AAAA,MAItBS,YAJsB,gBAItBA,YAJsB;;AAM9B,MAAMC,GAAG,GAAGJ,MAAM,EAAlB;;AAN8B,iBAOJJ,OAAO,EAPH;AAAA,MAOtBS,KAPsB,YAOtBA,KAPsB;AAAA,MAOfC,MAPe,YAOfA,MAPe;;AAS9B,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA;AAAA,qBAMAL,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwBJ,MAAxB,CANA;;AAAA;AAMjBK,cAAAA,QANiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQjBT,cAAAA,WAAW,WACN,YAAMS,QAAN,CAAeC,IAAf,CAAoBC,OADd,cACyBC,MAAM,CAACC,aAAP,CAAqB,MAArB,CADzB,GAEThB,cAAc,CAACiB,MAFN,CAAX;AARiB;;AAAA;AAenB,kBAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAAA,4BACVN,QADU,EACnBC,IADmB,aACnBA,IADmB;AAG3BT,gBAAAA,YAAY;AACVe,kBAAAA,QAAQ,EAAEZ,MAAM,CAACY,QADP;AAEVC,kBAAAA,KAAK,EAAEb,MAAM,CAACa;AAFJ,mBAGPP,IAHO,EAAZ;AAMAV,gBAAAA,WAAW,2BACAI,MAAM,CAACY,QADP,kCACkCJ,MAAM,CAACC,aAAP,CAAqB,OAArB,CADlC,GAEThB,cAAc,CAACqB,OAFN,CAAX;AAKAnB,gBAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACD;;AA9BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZd,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAiCA,SACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC;AAAb,KAAqCF,KAAK,CAAC,UAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,YAAb;AAAqB,IAAA,IAAI,EAAC;AAA1B,KAAyCA,KAAK,CAAC,UAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF;AAQD,CAlDD","sourcesContent":["import React from 'react';\nimport AlertContext from '../contexts/Alert';\nimport UserContext from '../contexts/User';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport Field from '../components/Field';\nimport Button from '../components/Button';\nimport { ALERT_VARIANTS } from '../config/constants';\nimport useApi from '../hooks/useApi';\n\nexport default ({ history }) => {\n  useTitle('Logowanie');\n\n  const { createAlert } = AlertContext();\n  const { startSession } = UserContext();\n\n  const api = useApi();\n  const { field, fields } = useForm();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let response;\n\n    try {\n      response = await api.post('/api/login/', fields);\n    } catch (error) {\n      createAlert(\n        `${error.response.data.message} ${String.fromCodePoint(0x26a0)}`,\n        ALERT_VARIANTS.danger\n      );\n      return;\n    }\n\n    if (response.status === 200) {\n      const { data } = response;\n\n      startSession({\n        username: fields.username,\n        email: fields.email,\n        ...data\n      });\n\n      createAlert(\n        `Cześć ${fields.username}! Jak się masz? ${String.fromCodePoint(0x1f44b)}`,\n        ALERT_VARIANTS.success\n      );\n\n      history.push('/');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field label=\"Nazwa użytkownika\" {...field('username')} />\n      <Field label=\"Hasło\" type=\"password\" {...field('password')} />\n\n      <Button type=\"submit\">Zaloguj się</Button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}