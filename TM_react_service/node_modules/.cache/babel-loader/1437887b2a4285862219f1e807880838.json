{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/views/Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport useTitle from '../hooks/useTitle';\nimport Loading from '../components/Loading';\nimport ImagePreview from './partials/ImagePreview';\nimport { ALERT_VARIANTS, BUTTON_SIZES, API_URL } from '../config/constants';\nimport AlertContext from '../contexts/Alert';\nimport Button from '../components/Button';\nimport Separator from '../components/Separator';\nimport useApi from '../hooks/useApi';\nimport { Table, Header, Body, Row, Column } from '../components/Table';\nexport default (function () {\n  useTitle('Strona główna');\n  var api = useApi();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      preview = _useState6[0],\n      setPreview = _useState6[1];\n\n  var _AlertContext = AlertContext(),\n      createAlert = _AlertContext.createAlert;\n\n  var fetchList =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/api/latest/');\n\n            case 3:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              createAlert(\"B\\u0142\\u0105d pobierania danych z serwisu \".concat(String.fromCodePoint(0x26a0)), ALERT_VARIANTS.danger);\n              return _context.abrupt(\"return\");\n\n            case 10:\n              setItems(response.data.map(function (item) {\n                return {\n                  id: item.id,\n                  url: \"\".concat(API_URL, \"/image/\").concat(item.id, \"/\"),\n                  createdAt: item.created_at,\n                  updatedAt: item.updated_at,\n                  source: item.source\n                };\n              }));\n              setIsLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function fetchList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchList();\n  }, []);\n  return React.createElement(Loading, {\n    isActive: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: Link,\n    to: \"edytor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Dodaj grafik\\u0119\"), React.createElement(Separator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ImagePreview, {\n    isOpen: preview,\n    onClose: function onClose() {\n      return setPreview(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, preview), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Link\"), React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Data utworzenia\"), React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Data edycji\"), React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Akcje\"))), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, items.map(function (item) {\n    return React.createElement(Row, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: item.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item.url)), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, format(new Date(item.createdAt), 'MM/DD/YYYY, HH:mm')), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, format(new Date(item.updatedAt), 'MM/DD/YYYY, HH:mm')), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: BUTTON_SIZES.small,\n      onClick: function onClick() {\n        return setPreview(item.source);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Icon.Eye, {\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Button, {\n      as: Link,\n      size: BUTTON_SIZES.small,\n      to: \"edytor/\".concat(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon.Edit, {\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }))));\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/views/Main.js"],"names":["React","useState","useEffect","format","Icon","Link","useTitle","Loading","ImagePreview","ALERT_VARIANTS","BUTTON_SIZES","API_URL","AlertContext","Button","Separator","useApi","Table","Header","Body","Row","Column","api","items","setItems","isLoading","setIsLoading","preview","setPreview","createAlert","fetchList","get","response","String","fromCodePoint","danger","data","map","item","id","url","createdAt","created_at","updatedAt","updated_at","source","Date","small"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport useTitle from '../hooks/useTitle';\nimport Loading from '../components/Loading';\nimport ImagePreview from './partials/ImagePreview';\nimport { ALERT_VARIANTS, BUTTON_SIZES, API_URL } from '../config/constants';\nimport AlertContext from '../contexts/Alert';\nimport Button from '../components/Button';\nimport Separator from '../components/Separator';\nimport useApi from '../hooks/useApi';\nimport {\n  Table, Header, Body, Row, Column\n} from '../components/Table';\n\nexport default () => {\n  useTitle('Strona główna');\n\n  const api = useApi();\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [preview, setPreview] = useState(null);\n  const { createAlert } = AlertContext();\n\n  const fetchList = async () => {\n    let response;\n\n    try {\n      response = await api.get('/api/latest/');\n    } catch (error) {\n      createAlert(\n        `Błąd pobierania danych z serwisu ${String.fromCodePoint(0x26a0)}`,\n        ALERT_VARIANTS.danger\n      );\n      return;\n    }\n\n    setItems(\n      response.data.map(item => ({\n        id: item.id,\n        url: `${API_URL}/image/${item.id}/`,\n        createdAt: item.created_at,\n        updatedAt: item.updated_at,\n        source: item.source\n      }))\n    );\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n\n  return (\n    <Loading isActive={isLoading}>\n      <Button as={Link} to=\"edytor\">\n        Dodaj grafikę\n      </Button>\n\n      <Separator />\n\n      <ImagePreview isOpen={preview} onClose={() => setPreview(false)}>\n        {preview}\n      </ImagePreview>\n\n      <Table>\n        <Header>\n          <Row>\n            <Column as=\"th\">Link</Column>\n            <Column as=\"th\">Data utworzenia</Column>\n            <Column as=\"th\">Data edycji</Column>\n            <Column as=\"th\">Akcje</Column>\n          </Row>\n        </Header>\n\n        <Body>\n          {items.map(item => (\n            <Row key={item.id}>\n              <Column>\n                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {item.url}\n                </a>\n              </Column>\n              <Column>{format(new Date(item.createdAt), 'MM/DD/YYYY, HH:mm')}</Column>\n              <Column>{format(new Date(item.updatedAt), 'MM/DD/YYYY, HH:mm')}</Column>\n\n              <Column>\n                <Button size={BUTTON_SIZES.small} onClick={() => setPreview(item.source)}>\n                  <Icon.Eye size={15} />\n                </Button>\n\n                <Button as={Link} size={BUTTON_SIZES.small} to={`edytor/${item.id}`}>\n                  <Icon.Edit size={15} />\n                </Button>\n              </Column>\n            </Row>\n          ))}\n        </Body>\n      </Table>\n    </Loading>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}