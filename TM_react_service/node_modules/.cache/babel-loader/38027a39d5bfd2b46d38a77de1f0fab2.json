{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/UpsertTablet.js\";\nimport React from 'react';\nimport { navigate } from '@reach/router';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { Field, Button, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nvar UpsertTablet = function UpsertTablet() {\n  useTitle('Dodaj tablet');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var _useForm = useForm(),\n      field = _useForm.field,\n      fields = _useForm.fields,\n      setFields = _useForm.setFields,\n      setErrors = _useForm.setErrors;\n\n  var url = '/api/grant_device/';\n  var getData = useFetch({\n    url: url,\n    onFetch: function onFetch(response) {\n      setFields(response.data);\n    },\n    onError: function onError() {\n      addAlert('Błąd pobierania danych tabletu z API', ALERT_VARIANTS.danger);\n    }\n  });\n  var updateData = useFetch({\n    url: url,\n    method: 'post',\n    data: fields,\n    onFetch: function onFetch() {\n      addAlert('Sukces, dane tabletu zostały poprawnie zapisane', ALERT_VARIANTS.success);\n      navigate('/tablety');\n    },\n    onError: function onError(errors) {\n      addAlert('Błąd zapisu danych tabletu', ALERT_VARIANTS.danger);\n      setErrors(errors.response.data);\n    }\n  });\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              updateData.fetch();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Loading, {\n    isActive: getData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    label: \"Nazwa tabletu\"\n  }, field('name'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Has\\u0142o\",\n    type: \"password\"\n  }, field('password'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Powt\\xF3rz has\\u0142o\",\n    type: \"password\"\n  }, field('repassword'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    isLoading: updateData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Zapisz zmiany\")));\n};\n\nexport default UpsertTablet;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/UpsertTablet.js"],"names":["React","navigate","useTitle","useForm","useFetch","useAlert","Field","Button","Loading","ALERT_VARIANTS","UpsertTablet","addAlert","field","fields","setFields","setErrors","url","getData","onFetch","response","data","onError","danger","updateData","method","success","errors","handleSubmit","e","preventDefault","fetch","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { navigate } from '@reach/router';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { Field, Button, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nconst UpsertTablet = () => {\n  useTitle('Dodaj tablet');\n\n  const { addAlert } = useAlert();\n  const {\n    field, fields, setFields, setErrors\n  } = useForm();\n\n  const url = '/api/grant_device/';\n\n  const getData = useFetch({\n    url,\n    onFetch: (response) => {\n      setFields(response.data);\n    },\n    onError: () => {\n      addAlert('Błąd pobierania danych tabletu z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const updateData = useFetch({\n    url,\n    method: 'post',\n    data: fields,\n    onFetch: () => {\n      addAlert('Sukces, dane tabletu zostały poprawnie zapisane', ALERT_VARIANTS.success);\n      navigate('/tablety');\n    },\n    onError: (errors) => {\n      addAlert('Błąd zapisu danych tabletu', ALERT_VARIANTS.danger);\n      setErrors(errors.response.data);\n    }\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    updateData.fetch();\n  };\n\n  return (\n    <Loading isActive={getData.loading}>\n      <form onSubmit={handleSubmit}>\n        <Field label=\"Nazwa tabletu\" {...field('name')} />\n        <Field label=\"Hasło\" type=\"password\" {...field('password')} />\n        <Field label=\"Powtórz hasło\" type=\"password\" {...field('repassword')} />\n\n        <Button type=\"submit\" isLoading={updateData.loading}>\n          Zapisz zmiany\n        </Button>\n      </form>\n    </Loading>\n  );\n};\n\nexport default UpsertTablet;\n"]},"metadata":{},"sourceType":"module"}