{"ast":null,"code":"import _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Upload.js\";\nimport React, { useState } from 'react';\nimport copy from 'copy-to-clipboard';\nimport * as Icon from 'react-feather';\nimport { format as _format } from 'date-fns';\nimport { ALERT_VARIANTS, API_URL, ICON_SIZE, DATE_FORMAT, BUTTON_VARIANTS, BUTTON_SIZES } from '../config/constants';\nimport { useAlert } from '../contexts/Alert';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { Loading, Button, Separator, Table } from '../components';\nimport UploadModal from './partials/UploadModal';\nimport DeleteUploadModal from './partials/DeleteUploadModal';\nimport ImageModal from './partials/ImageModal';\n\nvar Upload = function Upload() {\n  useTitle('Manager plików');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUploadModal = _useState2[0],\n      setIsUploadModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDeleteModal = _useState4[0],\n      setIsDeleteModal = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      preview = _useState6[0],\n      setPreview = _useState6[1];\n\n  var getData = useFetch({\n    url: '/api/images/',\n    onMount: true,\n    onError: function onError() {\n      addAlert('Błąd podczas ładowania plików', ALERT_VARIANTS.danger);\n    }\n  });\n\n  var openUploadModal = function openUploadModal() {\n    return setIsUploadModal(true);\n  };\n\n  var closeUploadModal = function closeUploadModal() {\n    return setIsUploadModal(false);\n  };\n\n  var openDeleteModal = function openDeleteModal(id) {\n    return setIsDeleteModal(id);\n  };\n\n  var closeDeleteModal = function closeDeleteModal() {\n    return setIsDeleteModal(false);\n  };\n\n  var copyUrl = function copyUrl(url) {\n    copy(url);\n    addAlert('Link do grafiki został skopiowany do schowka', ALERT_VARIANTS.success);\n  };\n\n  return React.createElement(Loading, {\n    isActive: getData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: openUploadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Icon.PlusCircle, {\n    size: ICON_SIZE.small,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" Dodaj plik\"), React.createElement(Separator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(UploadModal, {\n    isOpen: isUploadModal,\n    onClose: closeUploadModal,\n    onDone: function onDone() {\n      getData.fetch();\n      closeUploadModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(ImageModal, {\n    image: preview,\n    isOpen: preview,\n    onClose: function onClose() {\n      return setPreview(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(DeleteUploadModal, {\n    id: isDeleteModal,\n    isOpen: isDeleteModal,\n    onClose: closeDeleteModal,\n    onDone: function onDone() {\n      getData.fetch();\n      closeDeleteModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: [{\n      key: 'pic_text',\n      label: 'Nazwa'\n    }, {\n      label: 'Data utworzenia',\n      format: function format(item) {\n        return _format(item.timestamp, DATE_FORMAT);\n      }\n    }, {\n      label: 'Akcje',\n      format: function format(item) {\n        return React.createElement(React.Fragment, null, React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return openDeleteModal(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Icon.Trash2, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return setPreview(API_URL + item.pic);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Icon.Eye, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return copyUrl(API_URL + item.pic);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Icon.Clipboard, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })));\n      }\n    }],\n    data: getData.response.images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Upload.js"],"names":["React","useState","copy","Icon","format","ALERT_VARIANTS","API_URL","ICON_SIZE","DATE_FORMAT","BUTTON_VARIANTS","BUTTON_SIZES","useAlert","useTitle","useFetch","Loading","Button","Separator","Table","UploadModal","DeleteUploadModal","ImageModal","Upload","addAlert","isUploadModal","setIsUploadModal","isDeleteModal","setIsDeleteModal","preview","setPreview","getData","url","onMount","onError","danger","openUploadModal","closeUploadModal","openDeleteModal","id","closeDeleteModal","copyUrl","success","loading","small","fetch","key","label","item","timestamp","gray","pic","response","images"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'copy-to-clipboard';\nimport * as Icon from 'react-feather';\nimport { format } from 'date-fns';\nimport {\n  ALERT_VARIANTS,\n  API_URL,\n  ICON_SIZE,\n  DATE_FORMAT,\n  BUTTON_VARIANTS,\n  BUTTON_SIZES\n} from '../config/constants';\nimport { useAlert } from '../contexts/Alert';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport {\n  Loading, Button, Separator, Table\n} from '../components';\nimport UploadModal from './partials/UploadModal';\nimport DeleteUploadModal from './partials/DeleteUploadModal';\nimport ImageModal from './partials/ImageModal';\n\nconst Upload = () => {\n  useTitle('Manager plików');\n\n  const { addAlert } = useAlert();\n  const [isUploadModal, setIsUploadModal] = useState(false);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n  const [preview, setPreview] = useState(null);\n\n  const getData = useFetch({\n    url: '/api/images/',\n    onMount: true,\n    onError: () => {\n      addAlert('Błąd podczas ładowania plików', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const openUploadModal = () => setIsUploadModal(true);\n  const closeUploadModal = () => setIsUploadModal(false);\n\n  const openDeleteModal = id => setIsDeleteModal(id);\n  const closeDeleteModal = () => setIsDeleteModal(false);\n\n  const copyUrl = (url) => {\n    copy(url);\n    addAlert('Link do grafiki został skopiowany do schowka', ALERT_VARIANTS.success);\n  };\n\n  return (\n    <Loading isActive={getData.loading}>\n      <Button onClick={openUploadModal}>\n        <Icon.PlusCircle size={ICON_SIZE.small} /> Dodaj plik\n      </Button>\n\n      <Separator />\n\n      <UploadModal\n        isOpen={isUploadModal}\n        onClose={closeUploadModal}\n        onDone={() => {\n          getData.fetch();\n          closeUploadModal();\n        }}\n      />\n\n      <ImageModal image={preview} isOpen={preview} onClose={() => setPreview(null)} />\n\n      <DeleteUploadModal\n        id={isDeleteModal}\n        isOpen={isDeleteModal}\n        onClose={closeDeleteModal}\n        onDone={() => {\n          getData.fetch();\n          closeDeleteModal();\n        }}\n      />\n\n      <Table\n        columns={[\n          {\n            key: 'pic_text',\n            label: 'Nazwa'\n          },\n          {\n            label: 'Data utworzenia',\n            format: item => format(item.timestamp, DATE_FORMAT)\n          },\n          {\n            label: 'Akcje',\n            format: item => (\n              <>\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => openDeleteModal(item.id)}\n                >\n                  <Icon.Trash2 size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => setPreview(API_URL + item.pic)}\n                >\n                  <Icon.Eye size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => copyUrl(API_URL + item.pic)}\n                >\n                  <Icon.Clipboard size={ICON_SIZE.small} />\n                </Button>\n              </>\n            )\n          }\n        ]}\n        data={getData.response.images}\n      />\n    </Loading>\n  );\n};\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}