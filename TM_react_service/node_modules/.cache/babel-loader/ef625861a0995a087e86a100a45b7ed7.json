{"ast":null,"code":"import _objectSpread from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/components/SvgCanvas/index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport nanoid from 'nanoid';\nimport _ from 'lodash';\nimport EditorContext from '../../contexts/Editor';\nimport Tools from './Tools';\nimport Canvas from './Canvas';\nimport Layers from './Layers';\nimport Options from './Options';\nimport { TEXT, SQUARE, CIRCLE, IMAGE } from '../../config/elements';\nimport UploadGridModal from '../../screens/partials/UploadGridModal';\nimport './style.scss';\n\nvar Editor = function Editor(_ref) {\n  var _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? [] : _ref$initialValue,\n      save = _ref.save,\n      _ref$saving = _ref.saving,\n      saving = _ref$saving === void 0 ? false : _ref$saving,\n      AfterTools = _ref.afterTools;\n  var canvasRef = useRef(null);\n\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focus = _useState4[0],\n      setFocus = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isUploadModal = _useState6[0],\n      setIsUploadModal = _useState6[1];\n\n  var addItem = function addItem(config) {\n    return setItems([].concat(_toConsumableArray(items), [_objectSpread({\n      id: nanoid()\n    }, config)]));\n  };\n\n  var deleteItem = function deleteItem(id) {\n    setItems(items.filter(function (item) {\n      return item.id !== id;\n    }));\n    setFocus(null);\n  };\n\n  var addText = function addText() {\n    return addItem(TEXT);\n  };\n\n  var addSquare = function addSquare() {\n    return addItem(SQUARE);\n  };\n\n  var addCircle = function addCircle() {\n    return addItem(CIRCLE);\n  };\n\n  var addImage = function addImage() {\n    return setIsUploadModal(true);\n  };\n\n  var updateItem = function updateItem(id, opts) {\n    setItems(function (prev) {\n      return prev.map(function (item) {\n        if (item.id === id) {\n          return _.merge({}, item, opts);\n        }\n\n        return item;\n      });\n    });\n  };\n\n  var saveData = function saveData() {\n    if (save) {\n      save({\n        config: items,\n        source: canvasRef.current.innerHTML\n      });\n    }\n  };\n\n  useEffect(function () {\n    setItems(initialValue);\n  }, [initialValue]);\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      items: items,\n      deleteItem: deleteItem,\n      addText: addText,\n      addSquare: addSquare,\n      addCircle: addCircle,\n      addImage: addImage,\n      updateItem: updateItem,\n      saveData: saveData,\n      focus: focus,\n      setFocus: setFocus,\n      saving: saving\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(UploadGridModal, {\n    isOpen: isUploadModal,\n    onClose: function onClose() {\n      return setIsUploadModal(false);\n    },\n    onSelect: function onSelect(url) {\n      setIsUploadModal(false);\n      addItem(_objectSpread({}, IMAGE, {\n        xlinkHref: url\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Tools, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(AfterTools, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: canvasRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Layers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/components/SvgCanvas/index.js"],"names":["React","useState","useEffect","useRef","nanoid","_","EditorContext","Tools","Canvas","Layers","Options","TEXT","SQUARE","CIRCLE","IMAGE","UploadGridModal","Editor","initialValue","save","saving","AfterTools","afterTools","canvasRef","items","setItems","focus","setFocus","isUploadModal","setIsUploadModal","addItem","config","id","deleteItem","filter","item","addText","addSquare","addCircle","addImage","updateItem","opts","prev","map","merge","saveData","source","current","innerHTML","url","xlinkHref"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport nanoid from 'nanoid';\nimport _ from 'lodash';\nimport EditorContext from '../../contexts/Editor';\nimport Tools from './Tools';\nimport Canvas from './Canvas';\nimport Layers from './Layers';\nimport Options from './Options';\nimport {\n  TEXT, SQUARE, CIRCLE, IMAGE\n} from '../../config/elements';\nimport UploadGridModal from '../../screens/partials/UploadGridModal';\n\nimport './style.scss';\n\nconst Editor = ({\n  initialValue = [], save, saving = false, afterTools: AfterTools\n}) => {\n  const canvasRef = useRef(null);\n  const [items, setItems] = useState(initialValue);\n  const [focus, setFocus] = useState(null);\n  const [isUploadModal, setIsUploadModal] = useState(false);\n\n  const addItem = config => setItems([\n    ...items,\n    {\n      id: nanoid(),\n      ...config\n    }\n  ]);\n\n  const deleteItem = (id) => {\n    setItems(items.filter(item => item.id !== id));\n    setFocus(null);\n  };\n\n  const addText = () => addItem(TEXT);\n  const addSquare = () => addItem(SQUARE);\n  const addCircle = () => addItem(CIRCLE);\n  const addImage = () => setIsUploadModal(true);\n\n  const updateItem = (id, opts) => {\n    setItems(prev => prev.map((item) => {\n      if (item.id === id) {\n        return _.merge({}, item, opts);\n      }\n\n      return item;\n    }));\n  };\n\n  const saveData = () => {\n    if (save) {\n      save({\n        config: items,\n        source: canvasRef.current.innerHTML\n      });\n    }\n  };\n\n  useEffect(() => {\n    setItems(initialValue);\n  }, [initialValue]);\n\n  return (\n    <EditorContext.Provider\n      value={{\n        items,\n        deleteItem,\n        addText,\n        addSquare,\n        addCircle,\n        addImage,\n        updateItem,\n        saveData,\n        focus,\n        setFocus,\n        saving\n      }}\n    >\n      <UploadGridModal\n        isOpen={isUploadModal}\n        onClose={() => setIsUploadModal(false)}\n        onSelect={(url) => {\n          setIsUploadModal(false);\n          addItem({\n            ...IMAGE,\n            xlinkHref: url\n          });\n        }}\n      />\n\n      <div className=\"editor\">\n        <Tools />\n        <AfterTools />\n        <div ref={canvasRef}>\n          <Canvas />\n        </div>\n        <Layers />\n        <Options />\n      </div>\n    </EditorContext.Provider>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}