{"ast":null,"code":"var _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider as UserProvider } from './contexts/User';\nimport { Provider as AlertProvider } from './contexts/Alert';\nimport { Provider as SettingsProvider } from './contexts/Settings';\nimport Layout from './components/Layout';\nimport Route from './components/Route';\nimport 'normalize.css';\nimport './style.scss';\nimport Main from './views/Main';\nimport Account from './views/Account';\nimport UserAccounts from './views/UserAccounts';\nimport Editor from './views/Editor';\nimport Upload from './views/Upload';\nimport SignIn from './views/SignIn';\nimport SignUp from './views/SignUp';\nimport SignOut from './views/SignOut';\nimport NotFound from './views/NotFound';\n\nvar App = function App() {\n  return React.createElement(UserProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(AlertProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(SettingsProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Main,\n    authorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/konto\",\n    component: Account,\n    authorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/aktywuj\",\n    component: UserAccounts,\n    authorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/dodaj\",\n    component: Editor,\n    authorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/upload\",\n    component: Upload,\n    authorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/zaloguj\",\n    component: SignIn,\n    unauthorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/zarejestruj\",\n    component: SignUp,\n    unauthorized: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/wyloguj\",\n    component: SignOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))))));\n};\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), document.getElementById('root'));\nserviceWorker.register();","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/index.js"],"names":["React","render","BrowserRouter","Switch","serviceWorker","Provider","UserProvider","AlertProvider","SettingsProvider","Layout","Route","Main","Account","UserAccounts","Editor","Upload","SignIn","SignUp","SignOut","NotFound","App","document","getElementById","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,iBAAzC;AACA,SAASD,QAAQ,IAAIE,aAArB,QAA0C,kBAA1C;AACA,SAASF,QAAQ,IAAIG,gBAArB,QAA6C,qBAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,eAAP;AACA,OAAO,cAAP;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAET,IAAjC;AAAuC,IAAA,UAAU,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,UAAU,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEC,YAAlC;AAAgD,IAAA,UAAU,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,MAAhC;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAyC,IAAA,UAAU,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEC,MAAlC;AAA0C,IAAA,YAAY,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEC,MAAtC;AAA8C,IAAA,YAAY,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF,CADF,CADF,CADU;AAAA,CAAZ;;AAwBAlB,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUoB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN;AAEAlB,aAAa,CAACmB,QAAd","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider as UserProvider } from './contexts/User';\nimport { Provider as AlertProvider } from './contexts/Alert';\nimport { Provider as SettingsProvider } from './contexts/Settings';\nimport Layout from './components/Layout';\nimport Route from './components/Route';\n\nimport 'normalize.css';\nimport './style.scss';\n\nimport Main from './views/Main';\nimport Account from './views/Account';\nimport UserAccounts from './views/UserAccounts';\nimport Editor from './views/Editor';\nimport Upload from './views/Upload';\nimport SignIn from './views/SignIn';\nimport SignUp from './views/SignUp';\nimport SignOut from './views/SignOut';\nimport NotFound from './views/NotFound';\n\nconst App = () => (\n  <UserProvider>\n    <AlertProvider>\n      <SettingsProvider>\n        <BrowserRouter>\n          <Layout>\n            <Switch>\n              <Route path=\"/\" exact component={Main} authorized />\n              <Route path=\"/konto\" component={Account} authorized />\n              <Route path=\"/aktywuj\" component={UserAccounts} authorized />\n              <Route path=\"/dodaj\" component={Editor} authorized />\n              <Route path=\"/upload\" component={Upload} authorized />\n              <Route path=\"/zaloguj\" component={SignIn} unauthorized />\n              <Route path=\"/zarejestruj\" component={SignUp} unauthorized />\n              <Route path=\"/wyloguj\" component={SignOut} />\n              <Route component={NotFound} />\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n      </SettingsProvider>\n    </AlertProvider>\n  </UserProvider>\n);\n\nrender(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}