{"ast":null,"code":"import _defineProperty from \"/home/kacper/Pulpit/tk-new-3/tk-pro-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/kacper/Pulpit/tk-new-3/tk-pro-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/kacper/Pulpit/tk-new-3/tk-pro-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/tk-new-3/tk-pro-master/src/contexts/Settings.js\";\nimport React, { useState, createContext, useContext } from 'react';\nvar Settings = createContext({});\nexport var Provider = function Provider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      settings = _useState2[0],\n      setSettings = _useState2[1];\n\n  var createSetting = function createSetting(key, value) {\n    setSettings(function (prev) {\n      return _objectSpread({}, prev, _defineProperty({}, key, value));\n    });\n  };\n\n  var getSetting = function getSetting(key) {\n    return settings[key] || false;\n  };\n\n  return React.createElement(Settings.Provider, {\n    value: {\n      createSetting: createSetting,\n      getSetting: getSetting,\n      settings: settings\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, children);\n};\nexport default (function () {\n  return useContext(Settings);\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/tk-new-3/tk-pro-master/src/contexts/Settings.js"],"names":["React","useState","createContext","useContext","Settings","Provider","children","settings","setSettings","createSetting","key","value","prev","getSetting"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,IAAMC,QAAQ,GAAGF,aAAa,CAAC,EAAD,CAA9B;AAEA,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MACjCM,QADiC;AAAA,MACvBC,WADuB;;AAGxC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACpCH,IAAAA,WAAW,CAAC,UAAAI,IAAI;AAAA,+BACXA,IADW,sBAEbF,GAFa,EAEPC,KAFO;AAAA,KAAL,CAAX;AAID,GALD;;AAOA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAAAH,GAAG;AAAA,WAAIH,QAAQ,CAACG,GAAD,CAAR,IAAiB,KAArB;AAAA,GAAtB;;AAEA,SACE,oBAAC,QAAD,CAAU,QAAV;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,aAAa,EAAbA,aADK;AAELI,MAAAA,UAAU,EAAVA,UAFK;AAGLN,MAAAA,QAAQ,EAARA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,QAPH,CADF;AAWD,CAvBM;AAyBP,gBAAe;AAAA,SAAMH,UAAU,CAACC,QAAD,CAAhB;AAAA,CAAf","sourcesContent":["import React, { useState, createContext, useContext } from 'react';\n\nconst Settings = createContext({});\n\nexport const Provider = ({ children }) => {\n  const [settings, setSettings] = useState({});\n\n  const createSetting = (key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  const getSetting = key => settings[key] || false;\n\n  return (\n    <Settings.Provider\n      value={{\n        createSetting,\n        getSetting,\n        settings\n      }}\n    >\n      {children}\n    </Settings.Provider>\n  );\n};\n\nexport default () => useContext(Settings);\n"]},"metadata":{},"sourceType":"module"}