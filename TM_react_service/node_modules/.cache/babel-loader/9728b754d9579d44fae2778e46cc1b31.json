{"ast":null,"code":"import _objectSpread from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/components/SvgCanvas/index.js\";\nimport React, { useState } from 'react';\nimport nanoid from 'nanoid';\nimport _ from 'lodash';\nimport EditorContext from '../../contexts/Editor';\nimport Nav from './Nav';\nimport Canvas from './Canvas';\nimport Layers from './Layers';\nimport Options from './Options';\nimport { TEXT, RECT, CIRCLE, IMAGE } from '../../config/elements';\nimport './style.scss';\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focus = _useState4[0],\n      setFocus = _useState4[1];\n\n  var addItem = function addItem(config) {\n    return setItems([].concat(_toConsumableArray(items), [_objectSpread({\n      id: nanoid()\n    }, config)]));\n  };\n\n  var deleteItem = function deleteItem(id) {\n    setItems(items.filter(function (item) {\n      return item.id !== id;\n    }));\n    setFocus(null);\n  };\n\n  var addText = function addText() {\n    return addItem(TEXT);\n  };\n\n  var addRect = function addRect() {\n    return addItem(RECT);\n  };\n\n  var addCircle = function addCircle() {\n    return addItem(CIRCLE);\n  };\n\n  var addImage = function addImage() {\n    return addItem(IMAGE);\n  };\n\n  var updateItem = function updateItem(id, opts) {\n    setItems(function (prev) {\n      return prev.map(function (item) {\n        if (item.id === id) {\n          return _.merge({}, item, opts);\n        }\n\n        return item;\n      });\n    });\n  };\n\n  var exportJson = function exportJson() {\n    alert(JSON.stringify(items, null, 2));\n  };\n\n  return React.createElement(EditorContext.Provider, {\n    value: {\n      items: items,\n      deleteItem: deleteItem,\n      addText: addText,\n      addRect: addRect,\n      addCircle: addCircle,\n      addImage: addImage,\n      updateItem: updateItem,\n      exportJson: exportJson,\n      focus: focus,\n      setFocus: setFocus\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Layers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/components/SvgCanvas/index.js"],"names":["React","useState","nanoid","_","EditorContext","Nav","Canvas","Layers","Options","TEXT","RECT","CIRCLE","IMAGE","items","setItems","focus","setFocus","addItem","config","id","deleteItem","filter","item","addText","addRect","addCircle","addImage","updateItem","opts","prev","map","merge","exportJson","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport nanoid from 'nanoid';\nimport _ from 'lodash';\nimport EditorContext from '../../contexts/Editor';\nimport Nav from './Nav';\nimport Canvas from './Canvas';\nimport Layers from './Layers';\nimport Options from './Options';\nimport {\n  TEXT, RECT, CIRCLE, IMAGE\n} from '../../config/elements';\n\nimport './style.scss';\n\nexport default () => {\n  const [items, setItems] = useState([]);\n  const [focus, setFocus] = useState(null);\n\n  const addItem = config => setItems([\n    ...items,\n    {\n      id: nanoid(),\n      ...config\n    }\n  ]);\n\n  const deleteItem = (id) => {\n    setItems(items.filter(item => item.id !== id));\n    setFocus(null);\n  };\n\n  const addText = () => addItem(TEXT);\n  const addRect = () => addItem(RECT);\n  const addCircle = () => addItem(CIRCLE);\n  const addImage = () => addItem(IMAGE);\n\n  const updateItem = (id, opts) => {\n    setItems(prev => prev.map((item) => {\n      if (item.id === id) {\n        return _.merge({}, item, opts);\n      }\n\n      return item;\n    }));\n  };\n\n  const exportJson = () => {\n    alert(JSON.stringify(items, null, 2));\n  };\n\n  return (\n    <EditorContext.Provider\n      value={{\n        items,\n        deleteItem,\n        addText,\n        addRect,\n        addCircle,\n        addImage,\n        updateItem,\n        exportJson,\n        focus,\n        setFocus\n      }}\n    >\n      <Nav />\n      <Canvas />\n      <Layers />\n      <Options />\n    </EditorContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}