{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/views/partials/UploadModal.js\";\nimport React, { useState } from 'react';\nimport AlertContext from '../../contexts/Alert';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Modal';\nimport Field from '../../components/Field';\nimport useForm from '../../hooks/useForm';\nimport { ALERT_VARIANTS, MODAL_SIZES } from '../../config/constants';\nimport useApi from '../../hooks/useApi';\nexport default (function (_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      onDone = _ref.onDone;\n  var api = useApi({\n    multipart: true\n  });\n\n  var _AlertContext = AlertContext(),\n      createAlert = _AlertContext.createAlert;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useForm = useForm(),\n      field = _useForm.field,\n      fields = _useForm.fields,\n      setErrors = _useForm.setErrors;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setIsLoading(true);\n              formData = new FormData();\n              formData.append('pic', file);\n              formData.append('pic_text', fields.pic_text || '');\n              _context.prev = 5;\n              _context.next = 8;\n              return api.post('/api/upload_image/', formData);\n\n            case 8:\n              setFile(null);\n\n              if (onDone) {\n                onDone();\n              }\n\n              createAlert(\"Plik zosta\\u0142 wgrany pomy\\u015Blnie \".concat(String.fromCodePoint(0x1f386)), ALERT_VARIANTS.success);\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              createAlert(\"B\\u0142\\u0105d podczas dodawania pliku \".concat(String.fromCodePoint(0x26a0)), ALERT_VARIANTS.danger);\n              setErrors(_context.t0.response.data);\n\n            case 17:\n              setIsLoading(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 13]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleFile = function handleFile(e) {\n    setFile(e.target.files[0]);\n  };\n\n  return React.createElement(Modal, {\n    isOpen: isOpen,\n    size: MODAL_SIZES.small,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    type: \"input\",\n    label: \"Nazwa pliku\"\n  }, field('pic_text'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Field, {\n    type: \"file\",\n    label: \"Dodaj plik\",\n    error: field('pic').error,\n    onChange: handleFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Dodaj plik\")));\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/views/partials/UploadModal.js"],"names":["React","useState","AlertContext","Button","Modal","Field","useForm","ALERT_VARIANTS","MODAL_SIZES","useApi","isOpen","onClose","onDone","api","multipart","createAlert","file","setFile","isLoading","setIsLoading","field","fields","setErrors","handleSubmit","e","preventDefault","formData","FormData","append","pic_text","post","String","fromCodePoint","success","danger","response","data","handleFile","target","files","small","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AlertContext from '../../contexts/Alert';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Modal';\nimport Field from '../../components/Field';\nimport useForm from '../../hooks/useForm';\nimport { ALERT_VARIANTS, MODAL_SIZES } from '../../config/constants';\nimport useApi from '../../hooks/useApi';\n\nexport default ({ isOpen, onClose, onDone }) => {\n  const api = useApi({ multipart: true });\n  const { createAlert } = AlertContext();\n\n  const [file, setFile] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { field, fields, setErrors } = useForm();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    const formData = new FormData();\n\n    formData.append('pic', file);\n    formData.append('pic_text', fields.pic_text || '');\n\n    try {\n      await api.post('/api/upload_image/', formData);\n\n      setFile(null);\n\n      if (onDone) {\n        onDone();\n      }\n\n      createAlert(\n        `Plik został wgrany pomyślnie ${String.fromCodePoint(0x1f386)}`,\n        ALERT_VARIANTS.success\n      );\n    } catch (ex) {\n      createAlert(\n        `Błąd podczas dodawania pliku ${String.fromCodePoint(0x26a0)}`,\n        ALERT_VARIANTS.danger\n      );\n      setErrors(ex.response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  return (\n    <Modal isOpen={isOpen} size={MODAL_SIZES.small} onClose={onClose}>\n      <form onSubmit={handleSubmit}>\n        <Field type=\"input\" label=\"Nazwa pliku\" {...field('pic_text')} />\n        <Field type=\"file\" label=\"Dodaj plik\" error={field('pic').error} onChange={handleFile} />\n\n        <Button type=\"submit\" isLoading={isLoading}>\n          Dodaj plik\n        </Button>\n      </form>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}