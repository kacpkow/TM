{"ast":null,"code":"import _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Main.js\";\nimport React, { useState } from 'react';\nimport { format as _format } from 'date-fns';\nimport * as Icon from 'react-feather';\nimport { Link } from '@reach/router';\nimport copy from 'copy-to-clipboard';\nimport { API_URL, BUTTON_SIZES, DATE_FORMAT, ICON_SIZE, BUTTON_VARIANTS, ALERT_VARIANTS } from '../config/constants';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { Table, Button, Separator, Loading } from '../components';\nimport ImageModal from './partials/ImageModal';\nimport DeleteEditorItemModal from './partials/DeleteEditorItemModal';\nimport { useAlert } from '../contexts/Alert';\n\nvar Main = function Main() {\n  useTitle('Strona główna');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var getData = useFetch({\n    url: '/api/editor/',\n    onMount: true\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      preview = _useState2[0],\n      setPreview = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDeleteModal = _useState4[0],\n      setIsDeleteModal = _useState4[1];\n\n  var openDeleteModal = function openDeleteModal(id) {\n    return setIsDeleteModal(id);\n  };\n\n  var closeDeleteModal = function closeDeleteModal() {\n    return setIsDeleteModal(false);\n  };\n\n  var copyUrl = function copyUrl(url) {\n    copy(url);\n    addAlert('Link do grafiki został skopiowany do schowka', ALERT_VARIANTS.success);\n  };\n\n  return React.createElement(Loading, {\n    isActive: getData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: Link,\n    to: \"/edytor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Icon.PlusCircle, {\n    size: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" Dodaj grafik\\u0119\"), React.createElement(Separator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ImageModal, {\n    image: preview,\n    isOpen: preview,\n    onClose: function onClose() {\n      return setPreview(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(DeleteEditorItemModal, {\n    id: isDeleteModal,\n    isOpen: isDeleteModal,\n    onClose: closeDeleteModal,\n    onDone: function onDone() {\n      getData.fetch();\n      closeDeleteModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: [{\n      label: 'Link',\n      format: function format(item) {\n        var url = \"\".concat(API_URL, \"/image/\").concat(item.id, \"/\");\n        return React.createElement(\"a\", {\n          href: url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, url);\n      }\n    }, {\n      key: 'author',\n      label: 'Autor'\n    }, {\n      label: 'Data utworzenia',\n      format: function format(item) {\n        return _format(item.created_at, DATE_FORMAT);\n      }\n    }, {\n      label: 'Data edycji',\n      format: function format(item) {\n        return _format(item.updated_at, DATE_FORMAT);\n      }\n    }, {\n      label: 'Akcje',\n      format: function format(item) {\n        return React.createElement(React.Fragment, null, React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return openDeleteModal(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Icon.Trash2, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return setPreview(\"\".concat(API_URL, \"/image/\").concat(item.id, \"/\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Icon.Eye, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })), React.createElement(Button, {\n          as: Link,\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          to: \"/edytor/\".concat(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Icon.Edit, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          onClick: function onClick() {\n            return copyUrl(\"\".concat(API_URL, \"/image/\").concat(item.id, \"/\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Icon.Clipboard, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })));\n      }\n    }],\n    data: getData.response,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Main.js"],"names":["React","useState","format","Icon","Link","copy","API_URL","BUTTON_SIZES","DATE_FORMAT","ICON_SIZE","BUTTON_VARIANTS","ALERT_VARIANTS","useTitle","useFetch","Table","Button","Separator","Loading","ImageModal","DeleteEditorItemModal","useAlert","Main","addAlert","getData","url","onMount","preview","setPreview","isDeleteModal","setIsDeleteModal","openDeleteModal","id","closeDeleteModal","copyUrl","success","loading","fetch","label","item","key","created_at","updated_at","small","gray","response"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport * as Icon from 'react-feather';\nimport { Link } from '@reach/router';\nimport copy from 'copy-to-clipboard';\nimport {\n  API_URL,\n  BUTTON_SIZES,\n  DATE_FORMAT,\n  ICON_SIZE,\n  BUTTON_VARIANTS,\n  ALERT_VARIANTS\n} from '../config/constants';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport {\n  Table, Button, Separator, Loading\n} from '../components';\nimport ImageModal from './partials/ImageModal';\nimport DeleteEditorItemModal from './partials/DeleteEditorItemModal';\nimport { useAlert } from '../contexts/Alert';\n\nconst Main = () => {\n  useTitle('Strona główna');\n\n  const { addAlert } = useAlert();\n\n  const getData = useFetch({\n    url: '/api/editor/',\n    onMount: true\n  });\n\n  const [preview, setPreview] = useState(null);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const openDeleteModal = id => setIsDeleteModal(id);\n  const closeDeleteModal = () => setIsDeleteModal(false);\n\n  const copyUrl = (url) => {\n    copy(url);\n    addAlert('Link do grafiki został skopiowany do schowka', ALERT_VARIANTS.success);\n  };\n\n  return (\n    <Loading isActive={getData.loading}>\n      <Button as={Link} to=\"/edytor\">\n        <Icon.PlusCircle size={15} /> Dodaj grafikę\n      </Button>\n\n      <Separator />\n\n      <ImageModal image={preview} isOpen={preview} onClose={() => setPreview(null)} />\n\n      <DeleteEditorItemModal\n        id={isDeleteModal}\n        isOpen={isDeleteModal}\n        onClose={closeDeleteModal}\n        onDone={() => {\n          getData.fetch();\n          closeDeleteModal();\n        }}\n      />\n\n      <Table\n        columns={[\n          {\n            label: 'Link',\n            format: (item) => {\n              const url = `${API_URL}/image/${item.id}/`;\n\n              return (\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {url}\n                </a>\n              );\n            }\n          },\n          {\n            key: 'author',\n            label: 'Autor'\n          },\n          {\n            label: 'Data utworzenia',\n            format: item => format(item.created_at, DATE_FORMAT)\n          },\n          {\n            label: 'Data edycji',\n            format: item => format(item.updated_at, DATE_FORMAT)\n          },\n          {\n            label: 'Akcje',\n            format: item => (\n              <>\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => openDeleteModal(item.id)}\n                >\n                  <Icon.Trash2 size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => setPreview(`${API_URL}/image/${item.id}/`)}\n                >\n                  <Icon.Eye size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  as={Link}\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  to={`/edytor/${item.id}`}\n                >\n                  <Icon.Edit size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  onClick={() => copyUrl(`${API_URL}/image/${item.id}/`)}\n                >\n                  <Icon.Clipboard size={ICON_SIZE.small} />\n                </Button>\n              </>\n            )\n          }\n        ]}\n        data={getData.response}\n      />\n    </Loading>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}