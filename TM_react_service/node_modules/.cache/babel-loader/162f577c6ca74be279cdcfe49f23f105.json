{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Account.js\";\nimport React from 'react';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { Field, Button, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nvar Account = function Account(_ref) {\n  var id = _ref.id;\n  useTitle(id ? 'Edycja konta' : 'Moje konto');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var _useForm = useForm(),\n      field = _useForm.field,\n      fields = _useForm.fields,\n      setFields = _useForm.setFields,\n      setErrors = _useForm.setErrors;\n\n  var getUser = useFetch({\n    url: id ? \"/api/user/\".concat(id, \"/\") : '/api/user/',\n    onMount: true,\n    onFetch: function onFetch(response) {\n      setFields(response.user[0]);\n    },\n    onError: function onError() {\n      addAlert('Błąd pobierania danych użytkownika z API', ALERT_VARIANTS.danger);\n    }\n  });\n  var updateUser = useFetch({\n    url: id ? \"/api/update_user/\".concat(id, \"/\") : '/api/update_user/',\n    method: 'patch',\n    data: fields,\n    onFetch: function onFetch() {\n      addAlert('Sukces, dane użytkownika zostały poprawnie zapisane', ALERT_VARIANTS.success);\n    },\n    onError: function onError(errors) {\n      addAlert('Błąd zapisu danych użytkownika', ALERT_VARIANTS.danger);\n      setErrors(errors.response.data);\n    }\n  });\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              updateUser.fetch();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Loading, {\n    isActive: getUser.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    label: \"Nazwa u\\u017Cytkownika\"\n  }, field('username'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Imi\\u0119\"\n  }, field('first_name'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Nazwisko\"\n  }, field('last_name'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Adres email\"\n  }, field('email'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Has\\u0142o\",\n    type: \"password\"\n  }, field('password'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({\n    label: \"Powt\\xF3rz has\\u0142o\",\n    type: \"password\"\n  }, field('repassword'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    isLoading: updateUser.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Zapisz zmiany\")));\n};\n\nexport default Account;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Account.js"],"names":["React","useTitle","useForm","useFetch","useAlert","Field","Button","Loading","ALERT_VARIANTS","Account","id","addAlert","field","fields","setFields","setErrors","getUser","url","onMount","onFetch","response","user","onError","danger","updateUser","method","data","success","errors","handleSubmit","e","preventDefault","fetch","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useTitle from '../hooks/useTitle';\nimport useForm from '../hooks/useForm';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { Field, Button, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nconst Account = ({ id }) => {\n  useTitle(id ? 'Edycja konta' : 'Moje konto');\n\n  const { addAlert } = useAlert();\n  const {\n    field, fields, setFields, setErrors\n  } = useForm();\n\n  const getUser = useFetch({\n    url: id ? `/api/user/${id}/` : '/api/user/',\n    onMount: true,\n    onFetch: (response) => {\n      setFields(response.user[0]);\n    },\n    onError: () => {\n      addAlert('Błąd pobierania danych użytkownika z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const updateUser = useFetch({\n    url: id ? `/api/update_user/${id}/` : '/api/update_user/',\n    method: 'patch',\n    data: fields,\n    onFetch: () => {\n      addAlert('Sukces, dane użytkownika zostały poprawnie zapisane', ALERT_VARIANTS.success);\n    },\n    onError: (errors) => {\n      addAlert('Błąd zapisu danych użytkownika', ALERT_VARIANTS.danger);\n      setErrors(errors.response.data);\n    }\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    updateUser.fetch();\n  };\n\n  return (\n    <Loading isActive={getUser.loading}>\n      <form onSubmit={handleSubmit}>\n        <Field label=\"Nazwa użytkownika\" {...field('username')} />\n        <Field label=\"Imię\" {...field('first_name')} />\n        <Field label=\"Nazwisko\" {...field('last_name')} />\n        <Field label=\"Adres email\" {...field('email')} />\n        <Field label=\"Hasło\" type=\"password\" {...field('password')} />\n        <Field label=\"Powtórz hasło\" type=\"password\" {...field('repassword')} />\n\n        <Button type=\"submit\" isLoading={updateUser.loading}>\n          Zapisz zmiany\n        </Button>\n      </form>\n    </Loading>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}