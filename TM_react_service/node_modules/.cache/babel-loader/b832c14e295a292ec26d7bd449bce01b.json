{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/views/Activation.js\";\nimport React, { useState, useEffect } from 'react';\nimport useTitle from '../hooks/useTitle';\nimport Loading from '../components/Loading';\nimport Button from '../components/Button';\nimport { Table, Header, Body, Row, Column } from '../components/Table';\nimport { BUTTON_SIZES, ALERT_VARIANTS } from '../config/constants';\nimport AlertContext from '../contexts/Alert';\nimport useApi from '../hooks/useApi';\nexport default (function () {\n  useTitle('Aktywacja użytkowników');\n  var api = useApi();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _AlertContext = AlertContext(),\n      createAlert = _AlertContext.createAlert;\n\n  var getDataFromService =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/api/users/');\n\n            case 3:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              createAlert(\"B\\u0142\\u0105d pobierania u\\u017Cytkownik\\xF3w z serwisu \".concat(String.fromCodePoint(0x26a0)), ALERT_VARIANTS.warning);\n              return _context.abrupt(\"return\");\n\n            case 10:\n              if (response.status === 200) {\n                setItems(response.data.users);\n              }\n\n              setIsLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function getDataFromService() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function changeUserDetails(_x, _x2) {\n    return _changeUserDetails.apply(this, arguments);\n  }\n\n  function _changeUserDetails() {\n    _changeUserDetails = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(accountActive, userId) {\n      var response, apiRoute;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              apiRoute = accountActive ? '/api/deactivate_user/' : '/api/activate_user/';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return api.post(apiRoute, {\n                userId: userId\n              });\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 11;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              createAlert(\"B\\u0142\\u0105d zmiany danych u\\u017Cytkownika \".concat(String.fromCodePoint(0x26a0)), ALERT_VARIANTS.warning);\n              return _context2.abrupt(\"return\");\n\n            case 11:\n              if (response.status === 200) {\n                createAlert('Zmiana danych użytkownika zakończona pomyślnie!', ALERT_VARIANTS.success);\n              }\n\n              getDataFromService();\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 7]]);\n    }));\n    return _changeUserDetails.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getDataFromService();\n  }, []);\n  return React.createElement(Loading, {\n    isActive: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"U\\u017Cytkownik\"), React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Konto aktywne\"), React.createElement(Column, {\n    as: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Akcja\"))), React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, items.map(function (item) {\n    return React.createElement(Row, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item.username), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, item.is_active ? 'Aktywne' : 'Nieaktywne'), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: BUTTON_SIZES.small,\n      onClick: function onClick() {\n        return changeUserDetails(item.is_active, item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, item.is_active ? 'Deaktywuj' : 'Aktywuj')));\n  }))));\n});","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/views/Activation.js"],"names":["React","useState","useEffect","useTitle","Loading","Button","Table","Header","Body","Row","Column","BUTTON_SIZES","ALERT_VARIANTS","AlertContext","useApi","api","items","setItems","isLoading","setIsLoading","createAlert","getDataFromService","get","response","String","fromCodePoint","warning","status","data","users","changeUserDetails","accountActive","userId","apiRoute","post","success","map","item","id","username","is_active","small"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useTitle from '../hooks/useTitle';\nimport Loading from '../components/Loading';\nimport Button from '../components/Button';\nimport {\n  Table, Header, Body, Row, Column\n} from '../components/Table';\nimport { BUTTON_SIZES, ALERT_VARIANTS } from '../config/constants';\nimport AlertContext from '../contexts/Alert';\nimport useApi from '../hooks/useApi';\n\nexport default () => {\n  useTitle('Aktywacja użytkowników');\n\n  const api = useApi();\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { createAlert } = AlertContext();\n\n  const getDataFromService = async () => {\n    let response;\n\n    try {\n      response = await api.get('/api/users/');\n    } catch (error) {\n      createAlert(\n        `Błąd pobierania użytkowników z serwisu ${String.fromCodePoint(0x26a0)}`,\n        ALERT_VARIANTS.warning\n      );\n      return;\n    }\n\n    if (response.status === 200) {\n      setItems(response.data.users);\n    }\n    setIsLoading(false);\n  };\n\n  async function changeUserDetails(accountActive, userId) {\n    let response;\n\n    const apiRoute = accountActive ? '/api/deactivate_user/' : '/api/activate_user/';\n\n    try {\n      response = await api.post(apiRoute, { userId });\n    } catch (error) {\n      createAlert(\n        `Błąd zmiany danych użytkownika ${String.fromCodePoint(0x26a0)}`,\n        ALERT_VARIANTS.warning\n      );\n      return;\n    }\n\n    if (response.status === 200) {\n      createAlert(\n        'Zmiana danych użytkownika zakończona pomyślnie!',\n        ALERT_VARIANTS.success\n      );\n    }\n    getDataFromService();\n  }\n\n  useEffect(() => {\n    getDataFromService();\n  }, []);\n\n  return (\n    <Loading isActive={isLoading}>\n      <Table>\n        <Header>\n          <Row>\n            <Column as=\"th\">Użytkownik</Column>\n            <Column as=\"th\">Konto aktywne</Column>\n            <Column as=\"th\">Akcja</Column>\n          </Row>\n        </Header>\n\n        <Body>\n          {items.map(item => (\n            <Row key={item.id}>\n              <Column>{item.username}</Column>\n              <Column>{item.is_active ? 'Aktywne' : 'Nieaktywne'}</Column>\n              <Column>\n                <Button size={BUTTON_SIZES.small} onClick={() => changeUserDetails(item.is_active, item.id)}>\n                  {item.is_active ? 'Deaktywuj' : 'Aktywuj'}\n                </Button>\n              </Column>\n            </Row>\n          ))}\n        </Body>\n      </Table>\n    </Loading>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}