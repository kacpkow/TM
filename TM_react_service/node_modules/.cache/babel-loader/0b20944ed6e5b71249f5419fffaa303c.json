{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Editor.js\";\nimport React, { useEffect, useState } from 'react';\nimport { navigate } from '@reach/router';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { SvgCanvas, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nvar Editor = function Editor(_ref) {\n  var id = _ref.id;\n  useTitle(id ? 'Edycja grafiki' : 'Dodaj grafikę');\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      device = _useState4[0],\n      setDevice = _useState4[1];\n\n  var url = id ? \"api/editor/\".concat(id, \"/\") : 'api/editor/';\n  var getData = useFetch({\n    url: url,\n    onFetch: function onFetch(response) {\n      setData(JSON.parse(response.config));\n    },\n    onError: function onError() {\n      addAlert('Błąd pobierania danych edytora z API', ALERT_VARIANTS.danger);\n    }\n  });\n  var getDevices = useFetch({\n    url: '/api/devices/',\n    onMount: true,\n    onError: function onError() {\n      addAlert('Błąd pobierania tabletów z API', ALERT_VARIANTS.danger);\n    }\n  });\n  var saveData = useFetch({\n    url: url,\n    method: id ? 'put' : 'post',\n    onFetch: function onFetch(response) {\n      addAlert('Sukces, obraz został pomyślnie zapisany', ALERT_VARIANTS.success);\n      navigate(\"/edytor/\".concat(response.id));\n    },\n    onError: function onError() {\n      addAlert('Błąd zapisu edytora do API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  var handleSave =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(_ref2) {\n      var config, source;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = _ref2.config, source = _ref2.source;\n              saveData.fetch({\n                data: {\n                  device: device,\n                  config: JSON.stringify(config),\n                  source: source\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSave(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleDevice = function handleDevice(e) {\n    setDevice(e.target.value);\n  };\n\n  useEffect(function () {\n    if (id) {\n      getData.fetch();\n    }\n  }, []);\n  return React.createElement(Loading, {\n    isActive: getData.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(SvgCanvas, {\n    initialValue: data,\n    save: handleSave,\n    saving: saveData.loading,\n    afterTools: function afterTools() {\n      return React.createElement(\"label\", {\n        className: \"devices-selector\",\n        htmlFor: \"devicesSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Wybierz urz\\u0105dzenie na kt\\xF3rym b\\u0119dzie wy\\u015Bwietlany obraz:\"), React.createElement(\"select\", {\n        id: \"devicesSelect\",\n        onChange: handleDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, getDevices.response.length > 0 ? getDevices.response.map(function (item) {\n        return React.createElement(\"option\", {\n          value: item.id,\n          selected: getData.response.device === item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, item.name);\n      }) : React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Brak urz\\u0105dze\\u0144\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Editor.js"],"names":["React","useEffect","useState","navigate","useTitle","useFetch","useAlert","SvgCanvas","Loading","ALERT_VARIANTS","Editor","id","addAlert","data","setData","device","setDevice","url","getData","onFetch","response","JSON","parse","config","onError","danger","getDevices","onMount","saveData","method","success","handleSave","source","fetch","stringify","handleDevice","e","target","value","loading","length","map","item","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { navigate } from '@reach/router';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { SvgCanvas, Loading } from '../components';\nimport { ALERT_VARIANTS } from '../config/constants';\n\nconst Editor = ({ id }) => {\n  useTitle(id ? 'Edycja grafiki' : 'Dodaj grafikę');\n\n  const { addAlert } = useAlert();\n  const [data, setData] = useState([]);\n  const [device, setDevice] = useState(null);\n\n  const url = id ? `api/editor/${id}/` : 'api/editor/';\n\n  const getData = useFetch({\n    url,\n    onFetch: (response) => {\n      setData(JSON.parse(response.config));\n    },\n    onError: () => {\n      addAlert('Błąd pobierania danych edytora z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const getDevices = useFetch({\n    url: '/api/devices/',\n    onMount: true,\n    onError: () => {\n      addAlert('Błąd pobierania tabletów z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const saveData = useFetch({\n    url,\n    method: id ? 'put' : 'post',\n    onFetch: (response) => {\n      addAlert('Sukces, obraz został pomyślnie zapisany', ALERT_VARIANTS.success);\n      navigate(`/edytor/${response.id}`);\n    },\n    onError: () => {\n      addAlert('Błąd zapisu edytora do API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const handleSave = async ({ config, source }) => {\n    saveData.fetch({\n      data: {\n        device,\n        config: JSON.stringify(config),\n        source\n      }\n    });\n  };\n\n  const handleDevice = (e) => {\n    setDevice(e.target.value);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getData.fetch();\n    }\n  }, []);\n\n  return (\n    <Loading isActive={getData.loading}>\n      <SvgCanvas\n        initialValue={data}\n        save={handleSave}\n        saving={saveData.loading}\n        afterTools={() => (\n          <label className=\"devices-selector\" htmlFor=\"devicesSelect\">\n            <div>Wybierz urządzenie na którym będzie wyświetlany obraz:</div>\n\n            <select id=\"devicesSelect\" onChange={handleDevice}>\n              {getDevices.response.length > 0 ? (\n                getDevices.response.map(item => (\n                  <option value={item.id} selected={getData.response.device === item.id}>\n                    {item.name}\n                  </option>\n                ))\n              ) : (\n                <option>Brak urządzeń</option>\n              )}\n            </select>\n          </label>\n        )}\n      />\n    </Loading>\n  );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}