{"ast":null,"code":"import _regeneratorRuntime from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kacper/Pulpit/prg/TK/tk-pro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Activation.js\";\nimport React from 'react';\nimport { Link } from '@reach/router';\nimport * as Icon from 'react-feather';\nimport { BUTTON_SIZES, ALERT_VARIANTS, BUTTON_VARIANTS, ICON_SIZE } from '../config/constants';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { useUser } from '../contexts/User';\nimport { Loading, Button, Table } from '../components';\n\nvar Activation = function Activation() {\n  useTitle('Aktywacja użytkowników');\n\n  var _useUser = useUser(),\n      user = _useUser.user;\n\n  var _useAlert = useAlert(),\n      addAlert = _useAlert.addAlert;\n\n  var getUsers = useFetch({\n    url: '/api/users/',\n    onMount: true,\n    onError: function onError() {\n      addAlert('Błąd pobierania użytkowników do aktywacji z API', ALERT_VARIANTS.danger);\n    }\n  });\n  var updateUser = useFetch({\n    method: 'post',\n    onFetch: function onFetch() {\n      getUsers.fetch();\n    },\n    onError: function onError() {\n      addAlert('Błąd zmiany statusu użytkownika z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  var toggleStatus =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(isActive, userId) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              updateUser.fetch({\n                url: isActive ? '/api/deactivate_user/' : '/api/activate_user/',\n                data: {\n                  userId: userId\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function toggleStatus(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Loading, {\n    isActive: getUsers.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: [{\n      key: 'username',\n      label: 'Użytkownik'\n    }, {\n      key: 'first_name',\n      label: 'Imię'\n    }, {\n      key: 'last_name',\n      label: 'Nazwisko'\n    }, {\n      label: 'Status konta',\n      format: function format(item) {\n        return item.is_active ? 'Aktywne' : 'Nieaktywne';\n      }\n    }, {\n      label: 'Akcja',\n      format: function format(item) {\n        return React.createElement(React.Fragment, null, React.createElement(Button, {\n          as: Link,\n          size: BUTTON_SIZES.small,\n          variant: BUTTON_VARIANTS.gray,\n          to: \"/konto/\".concat(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Icon.Edit, {\n          size: ICON_SIZE.small,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })), React.createElement(Button, {\n          disabled: item.id === user.id,\n          size: BUTTON_SIZES.small,\n          onClick: function onClick() {\n            return toggleStatus(item.is_active, item.id);\n          },\n          variant: item.is_active ? BUTTON_VARIANTS.warning : BUTTON_VARIANTS.success,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, item.is_active ? 'Deaktywuj' : 'Aktywuj'));\n      }\n    }],\n    data: getUsers.response.users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Activation;","map":{"version":3,"sources":["/home/kacper/Pulpit/prg/TK/tk-pro/src/screens/Activation.js"],"names":["React","Link","Icon","BUTTON_SIZES","ALERT_VARIANTS","BUTTON_VARIANTS","ICON_SIZE","useTitle","useFetch","useAlert","useUser","Loading","Button","Table","Activation","user","addAlert","getUsers","url","onMount","onError","danger","updateUser","method","onFetch","fetch","toggleStatus","isActive","userId","data","loading","key","label","format","item","is_active","small","gray","id","warning","success","response","users"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from '@reach/router';\nimport * as Icon from 'react-feather';\nimport {\n  BUTTON_SIZES, ALERT_VARIANTS, BUTTON_VARIANTS, ICON_SIZE\n} from '../config/constants';\nimport useTitle from '../hooks/useTitle';\nimport useFetch from '../hooks/useFetch';\nimport { useAlert } from '../contexts/Alert';\nimport { useUser } from '../contexts/User';\nimport { Loading, Button, Table } from '../components';\n\nconst Activation = () => {\n  useTitle('Aktywacja użytkowników');\n\n  const { user } = useUser();\n  const { addAlert } = useAlert();\n\n  const getUsers = useFetch({\n    url: '/api/users/',\n    onMount: true,\n    onError: () => {\n      addAlert('Błąd pobierania użytkowników do aktywacji z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const updateUser = useFetch({\n    method: 'post',\n    onFetch: () => {\n      getUsers.fetch();\n    },\n    onError: () => {\n      addAlert('Błąd zmiany statusu użytkownika z API', ALERT_VARIANTS.danger);\n    }\n  });\n\n  const toggleStatus = async (isActive, userId) => {\n    updateUser.fetch({\n      url: isActive ? '/api/deactivate_user/' : '/api/activate_user/',\n      data: { userId }\n    });\n  };\n\n  return (\n    <Loading isActive={getUsers.loading}>\n      <Table\n        columns={[\n          {\n            key: 'username',\n            label: 'Użytkownik'\n          },\n          {\n            key: 'first_name',\n            label: 'Imię'\n          },\n          {\n            key: 'last_name',\n            label: 'Nazwisko'\n          },\n          {\n            label: 'Status konta',\n            format: item => (item.is_active ? 'Aktywne' : 'Nieaktywne')\n          },\n          {\n            label: 'Akcja',\n            format: item => (\n              <>\n                <Button\n                  as={Link}\n                  size={BUTTON_SIZES.small}\n                  variant={BUTTON_VARIANTS.gray}\n                  to={`/konto/${item.id}`}\n                >\n                  <Icon.Edit size={ICON_SIZE.small} />\n                </Button>\n\n                <Button\n                  disabled={item.id === user.id}\n                  size={BUTTON_SIZES.small}\n                  onClick={() => toggleStatus(item.is_active, item.id)}\n                  variant={item.is_active ? BUTTON_VARIANTS.warning : BUTTON_VARIANTS.success}\n                >\n                  {item.is_active ? 'Deaktywuj' : 'Aktywuj'}\n                </Button>\n              </>\n            )\n          }\n        ]}\n        data={getUsers.response.users}\n      />\n    </Loading>\n  );\n};\n\nexport default Activation;\n"]},"metadata":{},"sourceType":"module"}